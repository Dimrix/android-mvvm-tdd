
-register
--RegisterActivity
--RegisterScreen
--RegisterViewModel
--RegisterModel


RegisterScreen - dictates the contract the view has to implement
-- write contracts for

RegisterViewModel - saves the state and implements the business logic for registration
-- holds the model
-- provide only getter for the model to prevent direct replacement of model

RegisterModel - holds the registration values and does data validation and api calls
-- write all validation functions in model itself


Testing

1. add testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner" to default config
2. add these dependencies to gradle

    // Dependencies for local unit tests
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-all:1.10.19"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.powermock:powermock-module-junit4:1.6.4"
    testImplementation "org.powermock:powermock-api-mockito:1.6.4"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:1.0.1"
    androidTestImplementation "com.android.support.test:rules:1.0.1"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.1"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:3.0.1"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.0.1"

if you have this problem !!! JUnit version 3.8 or later expected:
change JRE version to 1.8 in run configuration

3. add RegisterUnitTest in the test -> java -> com.example.android_mvvm_tdd package
4. add compile "com.google.guava:guava:$rootProject.guavaVersion" for string operations without
    android textutils